function {{title}} ({{propertiesJoin}}) {
    {{#properties}}
        this.{{name}} = {{name}};
        {{^required}}Object.defineProperty(this,'{{name}}',{ enumerable:false});{{/required}}         
    {{/properties}}
        Object.defineProperty(this,'{{primaryKey.name}}',{ enumerable:false});
}

var database = require('./Model/Database/sqlite.js')('{{dbname}}');

{{title}}.all = function (callback) {
    database.all("SELECT * FROM {{table}}", {{title}}, callback);
}

{{title}}.get = function (id, callback) {
    database.get("SELECT * FROM {{table}} WHERE {{primaryKey.columnName}} = ?", [id],{{title}},callback);
}

{{title}}.prototype.save = function (callback) {
    if(this.{{primaryKey.name}}) { //Se existir valor no id será para UPDATE
       database.run("UPDATE {{table}} SET {{{propertiesSetValues}}} WHERE {{primaryKey.columnName}} = ?",[{{propertiesJoinThis}},this.{{primaryKey.name}}],callback);
    } else { //caso contrário para insert
        database.run("INSERT INTO {{table}} ({{propertiesJoin}}) VALUES ({{propertiesValuesParams}})", [{{propertiesJoinThis}}],callback);
    }
}

{{title}}.delete = function(id, callback){
    database.run("DELETE FROM {{table}} WHERE {{primaryKey.columnName}} = ?",[id],callback);  
}

{{title}}.mappingDBtoObject = {
    {{{mappingDBtoObject}}}
}

module.exports = {{title}};